local function twitterWood(name, message)
    local data = {
        {
            ["color"] = '15548997', 
            ["title"] = "**" .. name .. "**",  --
            ["description"] = message,  
            ["footer"] = {
                ["text"] = "Generated by lnd-flare",  
            },
            ["timestamp"] = os.date("!%Y-%m-%dT%H:%M:%S") .. "Z" 
        }
    }
    PerformHttpRequest(twitter['twittericon'], function(err, text, headers) end, 'POST', 
    json.encode({username = twitter['name'], embeds = data, avatar_url = twitter['image']}), 
    {['Content-Type'] = 'application/json'})
end


local function GetPlayerIdentifiers(src)
    local identifiers = {
        discord = nil,
        ip = nil,
        steam = nil,
        license = nil
    }

    local numIdentifiers = GetNumPlayerIdentifiers(src)
    for i = 0, numIdentifiers - 1 do
        local identifier = GetPlayerIdentifier(src, i)
        if identifier ~= nil then
            if string.match(identifier, "discord:") then
                identifiers.discord = string.sub(identifier, 9)
            elseif string.match(identifier, "ip:") then
                identifiers.ip = string.sub(identifier, 4)
            elseif string.match(identifier, "steam:") then
                identifiers.steam = string.sub(identifier, 7)
            elseif string.match(identifier, "license:") then
                identifiers.license = string.sub(identifier, 9)
            end
        end
    end

    identifiers.steam = identifiers.steam or "Unavailable"
    
    return identifiers
end


local dropTable = {
    {
        groupName = "Group1",
        totalChance = 50,
        items = {
            {name = "advanced_lockpick", minAmount = 1, maxAmount = 1},
            {name = "ammo-9", minAmount = 20, maxAmount = 50},
            {name = "money", minAmount = 15000, maxAmount = 30000}
        }
    },
    {
        groupName = "Group2",
        totalChance = 50,
        items = {
            {name = "advanced_lockpickk", minAmount = 1, maxAmount = 1},
            {name = "money", minAmount = 15000, maxAmount = 30000},
            {name = "packed-heroin", minAmount = 10, maxAmount = 20},
        }
    },
    {
        groupName = "Group3",
        totalChance = 50,
        items = {
            {name = "advanced_lockpick", minAmount = 1, maxAmount = 1},
            {name = "money", minAmount = 15000, maxAmount = 30000},
            {name = "ziplock-bag", minAmount = 15, maxAmount = 30},
        }
    }
}


RegisterNetEvent('lnd-flare:drop')
AddEventHandler('lnd-flare:drop', function(propCoords)
    local src = source
    local currentTime = os.date("%Y-%m-%d %H:%M:%S")
    local playerCoords = GetEntityCoords(GetPlayerPed(src))
    
    local identifiers = GetPlayerIdentifiers(src)
    local discord = identifiers.discord or "Unavailable"
    local steam = identifiers.steam or "N/A"
    local license = identifiers.license or "N/A"
    local ip = identifiers.ip or "N/A"

    local distance = #(vector3(playerCoords.x, playerCoords.y, playerCoords.z) - vector3(propCoords.x, propCoords.y, propCoords.z))
    
    if distance > 5.0 then
        local message = (
        "**Player:** %s\n" ..
        "**Discord:** <@%s>\n" ..
        "**Steam Hex:** `%s`\n" ..
        "**License:** `%s`\n" ..
        "**IP Address:** `%s`\n" ..
        "**Date:** `%s`\n" ..
        "**Distance from Object:** `%.2f meters`\n" ..
        "**Action:** Player too far from the object.")
        :format(GetPlayerName(src), discord, steam, license, ip, currentTime, distance)
        
        twitterWood("CHEATER LOG", message)
        return
    end

    local randomNumber = math.random(1, 100)
    local selectedGroup = nil

    for _, group in ipairs(dropTable) do
        if randomNumber <= group.totalChance then
            selectedGroup = group
            break
        else
            randomNumber = randomNumber - group.totalChance
        end
    end

    if selectedGroup then
        local itemsDropped = ""
        for _, items in ipairs(selectedGroup.items) do
            local itemName = items.name
            local minAmount = items.minAmount
            local maxAmount = items.maxAmount
            if exports.ox_inventory:CanCarryItem(src, itemName) then
                local randomAmount = math.random(minAmount, maxAmount)
                exports.ox_inventory:AddItem(src, itemName, randomAmount)
                itemsDropped = itemsDropped .. itemName .. " x" .. randomAmount .. ", "
            end
        end
        TriggerClientEvent('ox_lib:notify', src, {
            description = Config.translation.finish,
            icon = 'fa-solid fa-check',
            iconColor = '#2ECC71',
            iconAnimation = 'fade',
            alignIcon = 'center'
        })
        
        local message = (
        "**Player:** ``%s``\n" ..
        "**Discord:** <@%s>\n" ..
        "**Steam Hex:** `%s`\n" ..
        "**License:** `%s`\n" ..
        "**IP Address:** `%s`\n" ..
        "**Date:** ``%s``\n" ..
        "**Dropped Group:** `%s`\n" ..
        "**Dropped Items:** `%s`\n")
        :format(GetPlayerName(src), discord, steam, license, ip, currentTime, selectedGroup.groupName, itemsDropped)
    
        twitterWood("FINISH LOG | FLARE", message)
    end
end)


local cooldownActive = false
local cooldownTime = Config.OrderCooldown

RegisterServerEvent('lnd-flare:server:startCountdown')
AddEventHandler('lnd-flare:server:startCountdown', function()
    local src = source
    local currentTime = os.date("%Y-%m-%d %H:%M:%S")
    
    local identifiers = GetPlayerIdentifiers(src)
    local discord = identifiers.discord or "Unavailable"
    local steam = identifiers.steam or "N/A"
    local license = identifiers.license or "N/A"
    local ip = identifiers.ip or "N/A"

    if cooldownActive then
        TriggerClientEvent('lnd-flare:client:blockTalk', src, true)
        return
    end

    cooldownActive = true
    TriggerClientEvent('lnd-flare:client:blockTalk', src, false)

    local messageStart = (
    "**Player:** ``%s``\n" ..
    "**Discord:** <@%s>\n" ..
    "**Steam Hex:** `%s`\n" ..
    "**License:** `%s`\n" ..
    "**IP Address:** `%s`\n" ..
    "**Date:** ``%s``\n" ..
    "**Action:** Cooldown started.")
    :format(GetPlayerName(src), discord, steam, license, ip, currentTime)

    twitterWood("START LOG | FLARE", messageStart)


    SetTimeout(cooldownTime, function()
        cooldownActive = false
        TriggerClientEvent('lnd-flare:client:blockTalk', -1, false) 

        local messageEnd = (
        "**Date:** ``%s``\n" ..
        "**Action:** Cooldown ended.")
        :format(os.date("%Y-%m-%d %H:%M:%S"))

        twitterWood("COOLDOWN LOG | FLARE", messageEnd)
    end)
end)


ESX.RegisterServerCallback('lnd-flare:server:checkCooldown', function(source, cb)
    cb(cooldownActive)  
end)



twitter = {
    ['twittericon'] = '',
    ['name'] = 'Flara Log',
    ['image'] = ''
}
